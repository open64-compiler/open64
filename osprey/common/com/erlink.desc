/*
 *  Copyright (C) 2021 Xcalibyte (Shenzhen) Limited.
 */


/*

  Copyright (C) 2000, 2001 Silicon Graphics, Inc.  All Rights Reserved.

  This program is free software; you can redistribute it and/or modify it
  under the terms of version 2 of the GNU General Public License as
  published by the Free Software Foundation.

  This program is distributed in the hope that it would be useful, but
  WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  

  Further, this software is distributed without any warranty that it is
  free of the rightful claim of any third person regarding infringement 
  or the like.  Any license provided herein, whether implied or 
  otherwise, applies only to this software file.  Patent licenses, if 
  any, provided herein do not apply to combinations of this program with 
  other software, or any other product whatsoever.  

  You should have received a copy of the GNU General Public License along
  with this program; if not, write the Free Software Foundation, Inc., 59
  Temple Place - Suite 330, Boston MA 02111-1307, USA.

  Contact information:  Silicon Graphics, Inc., 1600 Amphitheatre Pky,
  Mountain View, CA 94043, or:

  http://www.sgi.com

  For further information regarding this notice, see:

  http://oss.sgi.com/projects/GenInfo/NoticeExplan

*/

/* ====================================================================
 * ====================================================================
 *
 * Module: erlink.desc
 * $Revision: 1.1.1.1 $
 * $Date: 2005/06/23 02:15:40 $
 * $Author: sxyang $
 * $Source: /u/cvs/Pathscale.MIPS/common/com/erlink.desc,v $
 *
 * Revision history:
 *  08-Sep-89 - Original Version
 *  24-Jan-91 - Copied for TP/Muse
 *
 * Description:
 *
 * Define the linker/object file error message descriptors for use with
 * the error message handler errors.c.  The associated error codes are
 * defined in the file erlink.h.
 *
 * ====================================================================
 * ====================================================================
 */

static const char *erlink_desc_rcs_id = "$Source: /u/cvs/Pathscale.MIPS/common/com/erlink.desc,v $ $Revision: 1.1.1.1 $";

#include "erlink.h"

ERROR_DESC EDESC_Link[] = {
/* File manipulation error codes: */
  { EC_R_Exists,	EM_User | ES_ERRPHASE,	RAG_EN_NONE,
    "Relocatable object file (%s) already exists",
    1, ET_STRING, 0,0,0,0,0 },
  { EC_R_Open,		EM_User | ES_ERRPHASE,	RAG_EN_NONE,
    "Can't open relocatable object file (%s): %s",
    2, ET_STRING, ET_SYSERR, 0,0,0,0 },
  { EC_R_Create,	EM_User | ES_ERRPHASE,	RAG_EN_NONE,
    "Can't create relocatable object file (%s): %s",
    2, ET_STRING, ET_SYSERR, 0,0,0,0 },
  { EC_R_Delete,	EM_User | ES_ERRPHASE,	RAG_EN_NONE,
    "Can't delete relocatable object file (%s): %s",
    2, ET_STRING, ET_SYSERR, 0,0,0,0 },
  { EC_R_Close,		EM_User | ES_ERRPHASE,	RAG_EN_NONE,
    "Closing relocatable object file (%s): %s",
    2, ET_STRING, ET_SYSERR, 0,0,0,0 },
  { EC_No_R,		EM_User | ES_ERRPHASE,	RAG_EN_NONE,
    "Relocatable object file (%s) does not exist",
    1, ET_STRING, 0,0,0,0,0 },
  { EC_U_Exists,	EM_User | ES_ERRPHASE,	RAG_EN_NONE,
    "UASM object file (%s) already exists",
    1, ET_STRING, 0,0,0,0,0 },
  { EC_U_Open,		EM_User | ES_ERRPHASE,	RAG_EN_NONE,
    "Can't open UASM object file (%s): %s",
    2, ET_STRING, ET_SYSERR, 0,0,0,0 },
  { EC_U_Create,	EM_User | ES_ERRPHASE,	RAG_EN_NONE,
    "Can't create UASM object file (%s): %s",
    2, ET_STRING, ET_SYSERR, 0,0,0,0 },
  { EC_U_Delete,	EM_User | ES_ERRPHASE,	RAG_EN_NONE,
    "Can't delete UASM object file (%s): %s",
    2, ET_STRING, ET_SYSERR, 0,0,0,0 },
  { EC_U_Close,		EM_User | ES_ERRPHASE,	RAG_EN_NONE,
    "Closing UASM object file (%s): %s",
    2, ET_STRING, ET_SYSERR, 0,0,0,0 },
  { EC_No_U,		EM_User | ES_ERRPHASE,	RAG_EN_NONE,
    "UASM object file (%s) does not exist",
    1, ET_STRING, 0,0,0,0,0 },
  { EC_R_Magic,		EM_User | ES_ERRPHASE,	RAG_EN_NONE,
    "Relocatable object file (%s) has wrong magic number (%d)",
    2, ET_STRING, ET_INT,0,0,0,0 },
  { EC_Link_Unresolved,		EM_User | ES_ERRPHASE,	RAG_EN_NONE,
    "External symbol %s is unresolved",
    1, ET_STRING, 0,0,0,0,0 },
  { EC_Link_Dupname,		EM_User | ES_ERRPHASE,	RAG_EN_NONE,
    "Duplicate external name %s",
    1, ET_STRING, 0,0,0,0,0 },
  { EC_Command_Open,		EM_User | ES_ERRPHASE,	RAG_EN_NONE,
    "Can't Open command file (%s): %s",
    2, ET_STRING, ET_SYSERR ,0,0,0,0 },
  { EC_Link_Insuf_Pages,	EM_User | ES_ERRABORT,	RAG_EN_NONE,
    "Insufficient number of pages available",
    0, 0, 0 ,0,0,0,0 },
  { EC_Link_2Merge,	EM_User | ES_ERRABORT,	RAG_EN_NONE,
    "Only one merge allowed",
    0, 0, 0 ,0,0,0,0 },
  { EC_U_Header,	EM_User | ES_ERRABORT,	RAG_EN_NONE,
    "Can't read header for %s",
    1, ET_STRING, 0 ,0,0,0,0 },
  { EC_U_Magic,	EM_User | ES_ERRABORT,	RAG_EN_NONE,
    "Wrong magic number in file %s",
    1, ET_STRING, 0 ,0,0,0,0 },
  { EC_U_Strange,	EM_User | ES_ERRABORT,	RAG_EN_NONE,
    "Strage code size in %s",
    1, ET_STRING, 0 ,0,0,0,0 },
  
  /* All error descriptor lists must end with a -1 error code: */
  { -1,	0, RAG_EN_NONE, "", 0, 0,0,0,0,0,0 }
};

